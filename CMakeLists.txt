cmake_minimum_required(VERSION 2.6)
project(g2tmpl)
set(VERSION v1.5.0)
enable_language (Fortran)
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE RELEASE CACHE STRING
        "Choose the type of build, options are: PRODUCTION Debug Release."
        FORCE)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
  set(IntelComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU*" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang*")
  set(GNUComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "pgc*")
  set(PGIComp true )
endif()

STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RelWithDebInfo" BUILD_RELEASE)
if(NOT BUILD_RELEASE)
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RELEASE" BUILD_RELEASE)
endif()
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "DEGUG" BUILD_DEBUG)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

if( (BUILD_RELEASE) OR (BUILD_PRODUCTION) )
  if(IntelComp)
    message("setting intel flags")
    set(CMAKE_C_FLAGS "-c -O3 -axCore-AVX2 -g -DUNDERSCORE" CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-c -O3 -axCore-AVX2 -g -free " CACHE INTERNAL "" )
  elseif(GNUComp)
    set(CMAKE_C_FLAGS "-c -O3 -ggdb -Wall -g -DUNDERSCORE" CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-c -O3 -g -ffree-form -funroll-loops -ggdb -Wall " CACHE INTERNAL "" )
  elseif(PGIComp)
    set(CMAKE_C_FLAGS "-g -fast -DUNDERSCORE -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-g -fast " CACHE INTERNAL "" )
  else()
    message("unknown compiler!")
    exit()
  endif()
endif()
add_subdirectory(src)
